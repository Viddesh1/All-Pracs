Aim: Demonstrate the Accessing and Storing and performing CRUD operations in

1. MongoDB

2. Redis

Background Information:

MongoDB:

MongoDB is a source-available cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with optional schemas. MongoDB is developed by MongoDB Inc. and licensed under the Server-Side Public License (SSPL) which is deemed non-free by several distributions.

Redis

 is an in-memory data structure store, used as a distributed, in-memory key-value database, cache and message broker, with optional durability. Redis supports different kinds of abstract data structures, such as strings, lists, maps, sets, sorted sets, Hyper Loglogs, bitmaps, streams, and spatial indices. The project was developed and maintained by Salvatore Sanfilippo, starting in 2009. From 2015 until 2020, he led a project core team sponsored by Redis Labs. Salvatore Sanfilippo left Redis as the maintainer in 2020. It is open-source software released under a BSD 3-clause license. In 2021, not long after the original author and main maintainer left, Redis Labs dropped the Labs from its name and now is known simply as "Redis".


The create or insert operations are used to insert or add new documents in the collection. If a collection does not exist, then it will create a new collection in the database.

The Read operations are used to retrieve documents from the collection, or in other words, read operations are used to query a collection for a document.

The update operations are used to update or modify the existing document in the collection.

The delete operation is used to delete or remove documents from a collection.


Code/Output:

1. MongoDB

Command to create a Database

-->use StudentData

>use StudentData
>switched to db StudentData

Command to create a Collection

----->db.createCollection("Student")

>db.createCollection("Student")

>"ok": 1 }


Command to view Collection

---->show collections

>show collections

Student


Command to insert a single document in  Collection

-->db.Student.insertOne({"name":"Raj","Roll_no":1,"Class" "MSc CS,"Address":"Mumbai"))


Command to insert multiple documents in Collection

>db.Student insertMany([{"name":"Rajar", "Roll no":2,"Class":"MSc CS","Address" "Kalyan"),{"name":"Manish
"Roll_no":3,"Class" "MSc CS","Address":"Thane"),("name":"Rahal", "Roll no":4,"Class":"MSc IT" "Address" "Kalyan"),{"name":"Mohit", "Roll no"-5"Class":"MSc IT","Address":"Thane"){"name":"Karan p Class":"MSc IT","Address":"Pune")])


Command to view a single document(First document)

---->db.Student.findOne()



Command to view all documents

db.Student.find()


Command to view documents with pretty()

---->db.Student.find().pretty()


Command to update a single document

--->db.Student.updateOne({"name":"Karan"}, {Sset: {"address":"Mumbai"}})




Command to update many documents which satisfies the conditon

---->db.Student.updateMany({"Class":"MSc_IT"},{$set: {"Class":"MSc_CS"}



Command to delete a single document from collection


--->db.Student.deleteOne(("name":"Mohit"))


Command to delete multiple documents from collection
----> db.Student.deleteMany(["Address":"Mumbai"})


Command to drop a collection
----->db.Student.drop()

> db.Student.drop()

true

>show collections





